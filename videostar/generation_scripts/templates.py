temporal_qa_prompts = [
    lambda q, a: f"Identify the segment that visually corresponds to the question '{q}' and the answer '{a}'. Provide the start and end times.",
    lambda q, a: f"Locate the video portion where the scenario described by '{q}' with the answer '{a}' is likely to occur. Output the time range.",
    lambda q, a: f"Analyze the video to find where the event hinted by '{q}' and answered by '{a}' is visually depicted. Specify the segment boundaries.",
    lambda q, a: f"Determine the video segment that aligns with the context of '{q}' and the provided answer '{a}'. Indicate the start and end times.",
    lambda q, a: f"Isolate the section of the video that visually represents the situation posed by '{q}' and resolved by '{a}'. Detail the temporal range.",
    lambda q, a: f"Pinpoint the segment in the video that matches the scenario of '{q}' answered by '{a}'. Provide the temporal markers.",
    lambda q, a: f"Find the part of the video that visually interprets '{q}' with the answer '{a}'. Return the start and end times of this segment.",
    lambda q, a: f"Discover the video segment where the content corresponds to '{q}' and is clarified by the answer '{a}'. State the time frame.",
    lambda q, a: f"Highlight the segment where the event described by '{q}' and '{a}' is visually evident. Provide the timing details.",
    lambda q, a: f"Extract the video portion that best visualizes the scenario described by '{q}' and the answer '{a}'. Indicate the relevant times.",
    lambda q, a: f"Trace the segment that visually aligns with the narrative of '{q}' and the answer '{a}'. Specify the start and end points.",
    lambda q, a: f"Identify the video segment that provides a visual representation for the context of '{q}' and '{a}'. Detail the temporal boundaries.",
    lambda q, a: f"Locate the section of the video that visually complements the narrative posed by '{q}' with the answer '{a}'. Provide the time range.",
    lambda q, a: f"Analyze the video to pinpoint where the question '{q}' and its answer '{a}' could be visually interpreted. State the segment's range.",
    lambda q, a: f"Deduce the video segment that correlates with the scenario described by '{q}' and '{a}'. Indicate the start and end times.",
    lambda q, a: f"Isolate the video part that visually coincides with the situation described by '{q}' and resolved by '{a}'. Detail the temporal extent.",
    lambda q, a: f"Pinpoint the segment within the video that reflects the context of '{q}' answered by '{a}'. Provide the temporal markers.",
    lambda q, a: f"Uncover the part of the video that visually narrates '{q}' with the answer '{a}'. Return the start and end times of this segment.",
    lambda q, a: f"Discover the segment where the video content matches '{q}' and is explained by '{a}'. State the time frame.",
    lambda q, a: f"Highlight the portion of the video where the event described by '{q}' and '{a}' becomes visually apparent. Provide the timing details.",
    lambda q, a: f"Extract the video segment that visualizes the scenario posed by '{q}' and answered by '{a}'. Indicate the relevant temporal boundaries.",
    lambda q, a: f"Trace the section that visually represents the narrative of '{q}' and the answer '{a}'. Specify the start and end markers.",
    lambda q, a: f"Identify the segment where the video visually aligns with the context provided by '{q}' and '{a}'. Detail the temporal limits.",
    lambda q, a: f"Locate the video section that serves as a visual counterpart to the narrative '{q}' with the answer '{a}'. Provide the time range.",
    lambda q, a: f"Analyze the video to identify the segment that visually represents the answer to '{q}' as '{a}'. State the segment's range.",
    lambda q, a: f"Deduce the part of the video that correlates visually with the scenario described by '{q}' and '{a}'. Indicate the start and end times.",
    lambda q, a: f"Isolate the segment that visually conveys the situation posed by '{q}' and resolved with '{a}'. Detail the time span.",
    lambda q, a: f"Pinpoint the section in the video that visually supports the context of '{q}' answered by '{a}'. Provide the temporal markers.",
    lambda q, a: f"Uncover the video part that visually interprets '{q}' with the answer '{a}'. Return the start and end times.",
    lambda q, a: f"Seek out the video segment where the implied action from '{q}' with '{a}' as the outcome is visually present. Mark the time interval.",
    lambda q, a: f"Identify the time frame within the video that visually correlates to the situation described by '{q}' and concluded by '{a}'.",
    lambda q, a: f"Locate the sequence in the video that serves as a visual representation for the narrative given by '{q}' and concluded by '{a}'. Provide the temporal boundaries.",
    lambda q, a: f"Scan the video for the segment that visually matches the context of '{q}' with '{a}' as the resolution. State the start and end times.",
    lambda q, a: f"Isolate the video sequence that visually narrates the event described in '{q}' and answered with '{a}'. Detail the start and end points.",
    lambda q, a: f"Pinpoint the video segment where the storyline suggested by '{q}' and '{a}' is visually depicted. Provide the time markers.",
    lambda q, a: f"Discover the segment of the video that visually aligns with the narrative of '{q}' and the solution '{a}'. State the timing.",
    lambda q, a: f"Highlight the video part where the scenario hinted by '{q}' and resolved with '{a}' is visually unfolded. Specify the temporal range.",
    lambda q, a: f"Extract the segment from the video that visually conveys the context of '{q}' with '{a}' as the answer. Indicate the start and end times.",
    lambda q, a: f"Trace the part of the video that visually correlates with the question '{q}' and its answer '{a}'. Specify the time interval.",
    lambda q, a: f"Identify the video segment that visually embodies the scenario proposed by '{q}' and resolved with '{a}'. Detail the temporal extents.",
    lambda q, a: f"Locate the video portion that visually represents the sequence of events as described by '{q}' and answered by '{a}'. Provide the time frame.",
    lambda q, a: f"Analyze the video to find the segment where the implied context of '{q}' with '{a}' as the answer is visually evident. State the segment's timing.",
    lambda q, a: f"Deduce the video sequence that visually matches the description provided by '{q}' and concluded with '{a}'. Indicate the start and end points.",
    lambda q, a: f"Isolate the segment in the video that visually depicts the action implied by '{q}' and clarified with '{a}'. Detail the time span.",
    lambda q, a: f"Pinpoint the sequence within the video that visually supports the storyline of '{q}' concluded by '{a}'. Provide the temporal markers.",
    lambda q, a: f"Uncover the part of the video that visually translates the question '{q}' with '{a}' as the answer. Return the start and end times.",
    lambda q, a: f"Discover the video segment where the narrative described by '{q}' and '{a}' is visually portrayed. State the time boundaries.",
    lambda q, a: f"Highlight the segment of the video that visually brings to life the scenario of '{q}' answered by '{a}'. Specify the timing details.",
    lambda q, a: f"Extract the part of the video that visually matches the description given by '{q}' and the answer '{a}'. Indicate the relevant temporal markers.",
    lambda q, a: f"Trace the video segment that visually corresponds to the event described in '{q}' and concluded with '{a}'. Specify the time range.",
    lambda q, a: f"Identify the segment in the video that visually complements the narrative provided by '{q}' and '{a}'. Detail the temporal limits.",
    lambda q, a: f"Locate the video section that serves as a visual analog to the question '{q}' and its answer '{a}'. Provide the time range.",
    lambda q, a: f"Analyze the video to identify the segment where the visual content aligns with '{q}' answered by '{a}'. State the segment's time frame.",
    lambda q, a: f"Deduce the part of the video that visually resonates with the scenario outlined by '{q}' and '{a}'. Indicate the start and end markers."
]


question_answer_reversal = [
    lambda answer: f"Given the context of the video, what question would elicit the answer '{answer}'?",
    lambda answer: f"If the answer to a video-related question is '{answer}', what might the question be?",
    lambda answer: f"What question about the video could lead to the answer '{answer}'?",
    lambda answer: f"In the context of the video, if I said '{answer}', what was the question?",
    lambda answer: f"What video-related question would result in the answer '{answer}'?",
    lambda answer: f"If '{answer}' is the answer, what was the question about the video?",
    lambda answer: f"Considering the video, what question would naturally lead to '{answer}' as the answer?",
    lambda answer: f"What query about the video would likely yield the answer '{answer}'?",
    lambda answer: f"Assuming the answer to a video query is '{answer}', what could the question be?",
    lambda answer: f"With the video in mind, what question could prompt the answer '{answer}'?",
    lambda answer: f"If the response to a video question is '{answer}', what might the original question have been?",
    lambda answer: f"What video-focused question could result in an answer like '{answer}'?",
    lambda answer: f"Thinking about the video, what question could lead to the response '{answer}'?",
    lambda answer: f"If I were to answer a question about the video with '{answer}', what would the question be?",
    lambda answer: f"Given the video content, what question would '{answer}' be an appropriate response to?",
    lambda answer: f"If '{answer}' is how I responded to a video-related inquiry, what was asked?",
    lambda answer: f"What could be the question about the video if '{answer}' is the answer?",
    lambda answer: f"Considering the video's details, what question would '{answer}' answer?",
    lambda answer: f"If the video led me to say '{answer}', what was the question?",
    lambda answer: f"What kind of question about the video would elicit an answer of '{answer}'?",
    lambda answer: f"If the answer to a question on the video is '{answer}', what could be the question?",
    lambda answer: f"What question regarding the video might lead to the answer '{answer}'?",
    lambda answer: f"In relation to the video, what question would have '{answer}' as its answer?",
    lambda answer: f"Thinking about the video, what kind of question would result in '{answer}'?",
    lambda answer: f"If we're discussing the video and I say '{answer}', what was your question?",
    lambda answer: f"What question about this video would prompt someone to answer '{answer}'?",
    lambda answer: f"If the video's context leads to an answer of '{answer}', what was the question?",
    lambda answer: f"What could be a plausible question about the video if the response is '{answer}'?",
    lambda answer: f"Given that '{answer}' is the answer, what was the video-related question?",
    lambda answer: f"If the video prompted the answer '{answer}', what was the question asked?",
    lambda answer: f"Thinking back on the video, what question could lead to an answer of '{answer}'?",
    lambda answer: f"If we're talking about the video and I come up with '{answer}', what did you ask?",
    lambda answer: f"Considering the narrative of the video, what question would yield '{answer}'?",
    lambda answer: f"Reflecting on the video, what question would naturally lead to the answer '{answer}'?",
    lambda answer: f"What question about the video's content could result in the answer '{answer}'?",
    lambda answer: f"If the video inspired the answer '{answer}', what might have been the question?",
    lambda answer: f"Given the scenes in the video, what question would lead to an answer of '{answer}'?",
    lambda answer: f"If we're analyzing the video and I answer '{answer}', what did you ask me?",
    lambda answer: f"What question related to the video's theme would have '{answer}' as the answer?",
    lambda answer: f"In the setting of the video, what question might elicit the response '{answer}'?",
    lambda answer: f"If the video's storyline leads to an answer of '{answer}', what was the question?",
    lambda answer: f"Considering the actions in the video, what question would lead to '{answer}'?",
    lambda answer: f"If '{answer}' is my reaction to a question about the video, what was the question?",
    lambda answer: f"Imagine you're the director of the video and you just explained '{answer}' to an interviewer. What was the interviewer's question?",
    lambda answer: f"Suppose you're an actor in the video and a fan approached you saying '{answer}'. What do you think the fan asked you?",
    lambda answer: f"Picture yourself as a character in the video. If your response was '{answer}', what do you think another character asked you?",
    lambda answer: f"As a critic reviewing the video, you concluded with '{answer}'. What question might a reader have asked to receive that response?",
    lambda answer: f"Envision you're giving a behind-the-scenes tour of the video set. If you mentioned '{answer}', what might a visitor have asked?",
    lambda answer: f"Imagine you're a film student analyzing the video, and you noted '{answer}' during a presentation. What question could have prompted this note?",
    lambda answer: f"Suppose you're in a Q&A session about the video and you just said '{answer}'. What was the audience's question?",
    lambda answer: f"Picture yourself as the writer of the video's story, and you just revealed '{answer}' in an interview. What do you think the interviewer asked?",
    lambda answer: f"Imagine you're editing the video and a colleague overhears you say '{answer}'. What might they have asked you about the edit?",
    lambda answer: f"Suppose you're a character in the video and during a pivotal scene, you uttered '{answer}'. What might another character have asked to prompt this?",
]


temporal_action_prompts = [
    lambda t1, t2: f"What activity occurs between {t1} and {t2} in the video?",
    lambda t1, t2: f"Identify the action happening from {t1} to {t2}.",
    lambda t1, t2: f"Between {t1} and {t2}, what is the primary action taking place?",
    lambda t1, t2: f"Describe the event that unfolds between {t1} and {t2}.",
    lambda t1, t2: f"What notable action is captured between {t1} and {t2}?",
    lambda t1, t2: f"Detail the sequence of actions from {t1} to {t2} in the footage.",
    lambda t1, t2: f"What occurs in the video segment from {t1} to {t2}?",
    lambda t1, t2: f"Highlight the key action between {t1} and {t2}.",
    lambda t1, t2: f"Which action defines the segment from {t1} to {t2}?",
    lambda t1, t2: f"What is the main focus between the timestamps {t1} and {t2}?",
    lambda t1, t2: f"Can you specify the action taking place from {t1} to {t2}?",
    lambda t1, t2: f"What action is being performed between {t1} and {t2}?",
    lambda t1, t2: f"From {t1} to {t2}, what activity is most prominent?",
    lambda t1, t2: f"Describe the action sequence from {t1} to {t2}.",
    lambda t1, t2: f"Between {t1} and {t2}, what significant event occurs?",
    lambda t1, t2: f"Outline the events happening between {t1} and {t2}.",
    lambda t1, t2: f"What is the key event between {t1} and {t2}?",
    lambda t1, t2: f"Identify the central action from {t1} to {t2}.",
    lambda t1, t2: f"Between {t1} and {t2}, which activity is highlighted?",
    lambda t1, t2: f"Explain the sequence of events from {t1} to {t2}.",
    lambda t1, t2: f"What action dominates the scene between {t1} and {t2}?",
    lambda t1, t2: f"Characterize the primary action from {t1} to {t2}.",
    lambda t1, t2: f"From {t1} to {t2}, what is unfolding in the video?",
    lambda t1, t2: f"What event transpires between {t1} and {t2}?",
    lambda t1, t2: f"Between {t1} and {t2}, what dynamic action is observed?",
    lambda t1, t2: f"Describe the main action from {t1} to {t2}.",
    lambda t1, t2: f"From {t1} to {t2}, what significant action takes place?",
    lambda t1, t2: f"Which action is most notable between {t1} and {t2}?",
    lambda t1, t2: f"What happens in the video between {t1} and {t2}?",
    lambda t1, t2: f"Between {t1} and {t2}, what action takes center stage?",
    lambda t1, t2: f"Highlight the action sequence from {t1} to {t2}.",
    lambda t1, t2: f"What pivotal event occurs from {t1} to {t2}?",
    lambda t1, t2: f"Describe the action taking place between {t1} and {t2}.",
    lambda t1, t2: f"Between {t1} and {t2}, what is the action focus?",
    lambda t1, t2: f"Identify the main activity between {t1} and {t2}.",
    lambda t1, t2: f"What is happening in the segment from {t1} to {t2}?",
    lambda t1, t2: f"From {t1} to {t2}, what action is depicted?",
    lambda t1, t2: f"What is the climax of the action between {t1} and {t2}?",
    lambda t1, t2: f"How does the scene evolve from {t1} to {t2}?",
    lambda t1, t2: f"Can you break down the action sequence between {t1} and {t2}?",
    lambda t1, t2: f"What transition occurs in the video from {t1} to {t2}?",
    lambda t1, t2: f"How does the narrative progress between {t1} and {t2}?",
    lambda t1, t2: f"What are the key moments from {t1} to {t2} in the video?",
    lambda t1, t2: f"Can you trace the movement from {t1} to {t2}?",
    lambda t1, t2: f"What emotional changes occur between {t1} and {t2}?",
    lambda t1, t2: f"How does the tension build from {t1} to {t2}?",
    lambda t1, t2: f"What are the turning points between {t1} and {t2}?",
    lambda t1, t2: f"Between {t1} and {t2}, how does the interaction evolve?",
    lambda t1, t2: f"What shift in dynamics occurs from {t1} to {t2}?",
    lambda t1, t2: f"How does the intensity change between {t1} and {t2}?",
    lambda t1, t2: f"Between {t1} and {t2}, how does the plot thicken?",
    lambda t1, t2: f"What is the buildup of action from {t1} to {t2}?",
    lambda t1, t2: f"How does the conflict unfold between {t1} and {t2}?",
    lambda t1, t2: f"What narrative elements are introduced from {t1} to {t2}?",
    lambda t1, t2: f"Between {t1} and {t2}, how does the pace accelerate?",
    lambda t1, t2: f"What developments occur in the story from {t1} to {t2}?",
    lambda t1, t2: f"Between {t1} and {t2}, what milestones are reached?"
]


prompts_for_normalized_time = [
    lambda t: f"What is happening at the {round(t*100, 3)}% mark of the video?",
    lambda  t: f"Describe the event occurring at {round(t*100, 3)}% through the video.",
    lambda  t: f"At the relative time of {round(t*100, 3)}%, what action is captured?",
    lambda  t: f"What is the key focus around the {round(t*100, 3)}% timestamp in the video?",
    lambda  t: f"Can you detail what's happening at approximately {round(t*100, 3)}% into the video?",
    lambda  t: f"What activity is being shown at {round(t*100, 3)}% through the footage?",
    lambda  t: f"Explain the scene unfolding when the video is {round(t*100, 3)}% complete.",
    lambda  t: f"At {round(t*100, 3)}% of the video's length, what is occurring?",
    lambda  t: f"What does the video portray at the {round(t*100, 3)}% mark?",
    lambda  t: f"How is the narrative advanced by {round(t*100, 3)}% of the video's run time?",
    lambda  t: f"What is the camera wearer doing around the {round(t*100, 3)}% point?",
    lambda  t: f"At the relative time of {round(t*100, 3)}%, what is the main action?",
    lambda  t: f"Identify the key event happening at {round(t*100, 3)}% through the video.",
    lambda  t: f"What unfolds in the video at {round(t*100, 3)}% of its total duration?",
    lambda  t: f"Describe the primary focus of the video at {round(t*100, 3)}%.",
    lambda  t: f"By the time the video reaches {round(t*100, 3)}%, what is depicted?",
    lambda  t: f"What action is highlighted at the {round(t*100, 3)}% point in the video?",
    lambda  t: f"How does the scene evolve by {round(t*100, 3)}% of the video?",
    lambda  t: f"At {round(t*100, 23)}% completion, what event is taking place?",
    lambda  t: f"What significant action is shown when the video is {round(t*100, 3)}% through?",
    lambda  t: f"By {round(t*100, 3)}% of the video, what activity is central?",
    lambda  t: f"Describe the actions happening around {round(t*100, 3)}% into the video.",
    lambda  t: f"What is the focus of the video at the {round(t*100, 3)}% timestamp?",
    lambda  t: f"How is the narrative depicted at {round(t*100, 3)}% through the video's length?",
    lambda  t: f"At the relative time point of {round(t*100, 3)}%, what is happening?",
    lambda  t: f"What does the video show at approximately {round(t*100, 3)}% of the way through?",
    lambda  t: f"Describe the video content at the {round(t*100, 3)}% mark.",
    lambda  t: f"What event or action is central at {round(t*100, 3)}% of the video?",
    lambda  t: f"At the {round(t*100, 3)}% point, what significant event is captured in the video?",
    lambda  t: f"At normalized time {t}, what is happening in the video?",
    lambda  t: f"Describe the event occurring at normalized time {t}.",
    lambda  t: f"What action is captured at the normalized timestamp {t}?",
    lambda  t: f"What is the key focus around the normalized timestamp {t} in the video?",
    lambda  t: f"Can you detail what's happening at normalized time {t} in the video?",
    lambda  t: f"What activity is being shown at normalized time {t} in the footage?",
    lambda  t: f"Explain the scene unfolding at normalized time {t}.",
    lambda  t: f"At normalized time {t}, what is the main focus of the video?",
    lambda  t: f"What is the significance of the event at normalized time {t}?",
    lambda  t: f"What does the video portray at the normalized time {t}?",
    lambda  t: f"How is the narrative advanced by the event at normalized time {t}?",
    lambda  t: f"What is the camera wearer doing around normalized time {t}?",
    lambda  t: f"At the relative time of {t}, what is the main action?",
    lambda  t: f"Identify the key event happening at normalized time {t}.",
    lambda  t: f"What unfolds in the video at normalized time {t}?",
    lambda  t: f"Describe the primary focus of the video at normalized time {t}.",
    lambda  t: f"By the time the video reaches normalized time {t}, what is depicted?",
    lambda  t: f"What action is highlighted at normalized time {t}?",
    lambda  t: f"How does the scene evolve by normalized time {t}?",
    lambda  t: f"At normalized time {t}, what event is taking place?",
    lambda  t: f"What significant action is shown when the video reaches normalized time {t}?",
    lambda  t: f"By normalized time {t}, what activity is central?",
    lambda  t: f"Describe the actions happening around normalized time {t}.",
    lambda  t: f"What is the focus of the video at normalized time {t}?",
    lambda  t: f"How does the narrative depict events at normalized time {t}?",
    lambda  t: f"At the relative time point of {t}, what is happening?",
    lambda  t: f"What does the video show at normalized time {t}?",
    lambda  t: f"Describe the video content at normalized time {t}.",
]

prompts_for_expert_commentary = [
    lambda t: f"For the task '{t}', what improvements would an expert suggest?",
    lambda t: f"How would you refine the process of '{t}' according to expert advice?",
    lambda t: f"What comments would an expert have on executing the task '{t}'?",
    lambda t: f"In terms of '{t}', what key points would an expert emphasize for enhancement?",
    lambda t: f"For the task '{t}', what insights could an expert provide for better execution?",
    lambda t: f"How might an expert optimize the approach to '{t}'?",
    lambda t: f"What are the expert's top tips for mastering '{t}'?",
    lambda t: f"In performing '{t}', what would an expert consider crucial for success?",
    lambda t: f"For the task '{t}', what detailed guidance would an expert offer?",
    lambda t: f"How would an expert critique the conventional approach to '{t}'?",
    lambda t: f"What expert commentary can you provide on the nuances of '{t}'?",
    lambda t: f"For someone learning '{t}', what expert advice would be most beneficial?",
    lambda t: f"What would an expert say about the common mistakes in '{t}'?",
    lambda t: f"In the context of '{t}', what advanced techniques would an expert recommend?",
    lambda t: f"How can one elevate their skill in '{t}' according to expert opinion?",
    lambda t: f"For the task '{t}', what are the critical factors for efficiency from an expert's perspective?",
    lambda t: f"What would an expert identify as the cornerstone for excellence in '{t}'?",
    lambda t: f"In mastering '{t}', what subtleties would an expert point out?",
    lambda t: f"How would an expert approach troubleshooting issues in '{t}'?",
    lambda t: f"For achieving precision in '{t}', what expert advice would be pivotal?",
    lambda t: f"What innovative methods might an expert suggest for '{t}'?",
    lambda t: f"In terms of '{t}', how would an expert recommend ensuring quality?",
    lambda t: f"What wisdom would an expert impart for overcoming challenges in '{t}'?",
    lambda t: f"How does expert advice transform the approach to '{t}'?",
    lambda t: f"For the task '{t}', what foundational principles would an expert stress?",
    lambda t: f"What are some advanced tips for improving '{t}'?",
    lambda t: f"How can the efficiency of '{t}' be enhanced from a professional standpoint?",
    lambda t: f"What are the best practices for performing '{t}'?",
    lambda t: f"In the context of '{t}', what strategies lead to optimal results?",
    lambda t: f"For the task '{t}', what insights lead to superior execution?",
    lambda t: f"How can someone master the intricacies of '{t}'?",
    lambda t: f"What are the golden rules for excelling in '{t}'?",
    lambda t: f"What are the key considerations for someone performing '{t}'?",
    lambda t: f"What guidance would you give for the task '{t}' to ensure quality?",
    lambda t: f"How can one elevate their approach to '{t}'?",
    lambda t: f"What are the critical elements for success in '{t}'?",
    lambda t: f"What advice would you offer for mastering '{t}'?",
    lambda t: f"How can the process of '{t}' be optimized for better outcomes?",
    lambda t: f"What innovative approaches can be applied to '{t}'?",
    lambda t: f"What are the dos and don'ts in '{t}'?",
    lambda t: f"How should one approach '{t}' to achieve excellence?",
    lambda t: f"What methodologies redefine success in '{t}'?",
    lambda t: f"What are the hallmarks of a well-executed '{t}'?",
    lambda t: f"How can practitioners of '{t}' push the boundaries for higher standards?",
    lambda t: f"What subtle techniques make a significant difference in '{t}'?",
    lambda t: f"How can one troubleshoot common problems in '{t}'?",
    lambda t: f"What steps ensure precision and accuracy in '{t}'?",
    lambda t: f"What lesser-known methods can enhance '{t}'?",
    lambda t: f"How can the quality of '{t}' be consistently maintained?",
    lambda t: f"What principles should guide the execution of '{t}'?",
    lambda t: f"What are the innovative techniques for '{t}'?",
    lambda t: f"How can challenges in '{t}' be effectively addressed?",
    lambda t: f"What are the crucial steps for a flawless '{t}'?",
    lambda t: f"How can the workflow of '{t}' be streamlined for better efficiency?",
    lambda t: f"What practices elevate the standard of '{t}'?",
    lambda t: f"How can one ensure thoroughness in '{t}'?",
    lambda t: f"What are the cornerstone techniques for '{t}'?",
    lambda t: f"How can one attain mastery in '{t}'?",
    lambda t: f"What are the breakthrough practices for '{t}'?",
    lambda t: f"How can the approach to '{t}' be refined for top-notch results?",
    lambda t: f"What are the secrets to achieving excellence in '{t}'?",
    lambda t: f"How can the execution of '{t}' be perfected?",
    lambda t: f"What are the best approaches to '{t}' for outstanding performance?",
    lambda t: f"How can one achieve a professional level in '{t}'?",
    lambda t: f"What are the key factors for a successful '{t}'?",
    lambda t: f"What expert strategies are crucial for optimizing '{t}'?",
    lambda t: f"How would an expert dissect the task of '{t}' to improve outcomes?",
    lambda t: f"In the execution of '{t}', what expert perspectives could redefine efficiency?",
    lambda t: f"What expert-driven innovations could revolutionize the task '{t}'?",
    lambda t: f"For practitioners of '{t}', what expert advice is considered game-changing?",
    lambda t: f"How would an expert deconstruct the task '{t}' to highlight improvement areas?",
    lambda t: f"In enhancing '{t}', what expert-derived insights offer the most value?",
    lambda t: f"What expert suggestions could significantly uplift the performance in '{t}'?",
    lambda t: f"How do experts recommend navigating the complexities of '{t}'?",
    lambda t: f"For the task '{t}', what breakthrough advice would an expert provide?",
    lambda t: f"What are the expert-level considerations for excelling in '{t}'?",
    lambda t: f"How would an expert refine the techniques used in '{t}'?",
    lambda t: f"In the art of '{t}', what transformative advice would an expert share?",
    lambda t: f"For enthusiasts of '{t}', what expert counsel is indispensable?",
    lambda t: f"How would an expert dissect and enhance the methodologies employed in '{t}'?",
]


reverse_single_timestamp_prompts = [
    lambda action: f"At what normalized time does '{action}' occur in the video?",
    lambda action: f"Can you specify the exact moment, as a normalized value, when '{action}' happens?",
    lambda action: f"What is the normalized timestamp for the action '{action}' within the video?",
    lambda action: f"For the action '{action}', identify the corresponding point in time, normalized between 0 and 1.",
    lambda action: f"Where in the video timeline, expressed as a normalized value, does '{action}' take place?",
    lambda action: f"Determine the normalized time point at which '{action}' is observed in the footage.",
    lambda action: f"At which point, normalized from start (0) to end (1) of the video, does '{action}' occur?",
    lambda action: f"What is the precise moment, in normalized time, of the action '{action}'?",
    lambda action: f"Can you pinpoint when the action '{action}' is performed, using a normalized time value?",
    lambda action: f"Identify the normalized timestamp corresponding to the occurrence of '{action}'.",
    lambda action: f"Provide the normalized moment in the video when '{action}' is captured.",
    lambda action: f"Where does '{action}' fit in the video's normalized timeline?",
    lambda action: f"What normalized point in the video timeline corresponds to '{action}'?",
    lambda action: f"When, in terms of normalized time, does the action '{action}' unfold?",
    lambda action: f"Locate the moment '{action}' occurs in the video on a scale from 0 to 1.",
    lambda action: f"Estimate the normalized time at which '{action}' takes place in the video.",
    lambda action: f"In the video's normalized timeline, where does '{action}' happen?",
    lambda action: f"What is the time, normalized from 0 to 1, of the action '{action}'?",
    lambda action: f"For the action '{action}', what is the corresponding normalized timestamp?",
    lambda action: f"How is the moment of '{action}' represented in normalized video time?",
    lambda action: f"What is the specific normalized time for '{action}' in the video?",
    lambda action: f"Pinpoint the normalized timestamp of '{action}' in the video sequence.",
    lambda action: f"When does '{action}' occur, expressed as a normalized value within the video?",
    lambda action: f"Identify the point in the video, normalized from 0 to 1, at which '{action}' is seen.",
    lambda action: f"Can you determine the normalized time of '{action}' in the video content?",
    lambda action: f"Describe the normalized timing for the occurrence of '{action}' in the video.",
    lambda action: f"What is the normalized position in the timeline for '{action}'?",
    lambda action: f"Give the normalized time point for the action '{action}' in the video.",
    lambda action: f"Where, in normalized time, is the action '{action}' located within the video?",
    lambda action: f"Delineate the moment of '{action}' in the video, normalized between 0 and 1."
]


reverse_temporal_action_prompts = [
    lambda action: f"At what times does '{action}' occur in the video? Please provide a range from 0 to 1.",
    lambda action: f"For the action '{action}', what is the start and end time in normalized form?",
    lambda action: f"Can you give the normalized start and end times for when '{action}' happens in the video?",
    lambda action: f"What is the temporal range for the action '{action}' within the video, normalized to [0,1]?",
    lambda action: f"Identify the portion of the video, from 0 to 1, where '{action}' takes place.",
    lambda action: f"Where does the action '{action}' fall in the video timeline? Provide a normalized range.",
    lambda action: f"During which segment, normalized from 0 to 1, does the action '{action}' occur?",
    lambda action: f"Provide the normalized start and finish times for the occurrence of '{action}' in the video.",
    lambda action: f"What is the duration, in terms of start and end points normalized between 0 and 1, for '{action}'?",
    lambda action: f"Between which normalized timestamps does the action '{action}' unfold in the video?",
    lambda action: f"Can you pinpoint the start and end of '{action}' in the video, expressed as a range from 0 to 1?",
    lambda action: f"Where in the video timeline, normalized from 0 to 1, can we find the action '{action}'?",
    lambda action: f"What is the normalized timeframe for the action '{action}' within the video?",
    lambda action: f"For the specified action '{action}', what are the normalized starting and ending points?",
    lambda action: f"In what normalized time range does the action '{action}' occur in the video?",
    lambda action: f"How would you temporally locate the action '{action}' in the video, using a scale from 0 to 1?",
    lambda action: f"What is the normalized time interval for the action '{action}' in the video?",
    lambda action: f"Given the action '{action}', can you specify its temporal location in the video from 0 to 1?",
    lambda action: f"Describe the normalized time span during which '{action}' is performed in the video.",
    lambda action: f"What are the start and end points, normalized between 0 and 1, for the action '{action}'?",
    lambda action: f"Locate the action '{action}' within the video's timeline. What are the normalized start and end points?",
    lambda action: f"Map the occurrence of '{action}' onto the video's normalized timeline. Where does it start and end?",
    lambda action: f"How is the action '{action}' distributed over the video's duration, in normalized time?",
    lambda action: f"Quantify the span of '{action}' within the video using a normalized time range from 0 to 1.",
    lambda action: f"In normalized terms, how can the timeframe of '{action}' be defined within the video?",
    lambda action: f"Using a 0 to 1 scale, determine the segment of the video where '{action}' takes place.",
    lambda action: f"Identify the normalized segment corresponding to '{action}' in the video's timeline.",
    lambda action: f"For the action '{action}', provide its location in the video as a range normalized between 0 and 1.",
    lambda action: f"Trace the action '{action}' in the video timeline, offering start and end points on a scale from 0 to 1.",
    lambda action: f"Estimate the time bounds for '{action}' within the video, expressed as normalized values from 0 to 1."
]


spatiotemporal_prompts = [
    lambda bbox, timestamp: f"At the normalized time {timestamp}, what object is within the bounding box {bbox}?",
    lambda bbox, timestamp: f"Identify the object located at {bbox} at the normalized timestamp {timestamp} in the video.",
    lambda bbox, timestamp: f"Considering the bounding box {bbox} at time {timestamp}, what is the object present?",
    lambda bbox, timestamp: f"What object can be observed in the bounding box {bbox} at the normalized time {timestamp}?",
    lambda bbox, timestamp: f"At the specific time {timestamp}, which object is enclosed within the bounding box {bbox}?",
    lambda bbox, timestamp: f"For the time slice at {timestamp}, determine the object in the bounding box {bbox}.",
    lambda bbox, timestamp: f"Within the bounding box {bbox} at time {timestamp}, which object is being depicted?",
    lambda bbox, timestamp: f"Identify the object within the specified bounding box {bbox} at the normalized timestamp {timestamp}.",
    lambda bbox, timestamp: f"Analyzing the bounding box {bbox} at the normalized time {timestamp}, what object is visible?",
    lambda bbox, timestamp: f"What is the object found at the bounding box coordinates {bbox} at the normalized timestamp {timestamp}?",
    lambda bbox, timestamp: f"Describe the object found in bounding box {bbox} at normalized time {timestamp}.",
    lambda bbox, timestamp: f"At normalized timestamp {timestamp}, what is seen within the bounds of {bbox}?",
    lambda bbox, timestamp: f"Which object occupies the bounding box {bbox} at the moment marked by {timestamp}?",
    lambda bbox, timestamp: f"Characterize the entity within bounding box {bbox} at normalized timestamp {timestamp}.",
    lambda bbox, timestamp: f"In the video, what object is captured in {bbox} around the normalized time {timestamp}?",
    lambda bbox, timestamp: f"Name the object located at bounding box {bbox} during the normalized time {timestamp}.",
    lambda bbox, timestamp: f"Within the video's timeframe at {timestamp}, what object does bounding box {bbox} contain?",
    lambda bbox, timestamp: f"At the given normalized time {timestamp}, identify the object in {bbox}.",
    lambda bbox, timestamp: f"What is encapsulated in the bounding box {bbox} at the specific normalized time {timestamp}?",
    lambda bbox, timestamp: f"Pinpoint the object found in {bbox} at the normalized timeframe of {timestamp}.",
    lambda bbox, timestamp: f"What can be observed within the dimensions of {bbox} at the normalized point {timestamp}?",
    lambda bbox, timestamp: f"Speculate on the object within {bbox} at the normalized time marker {timestamp}.",
    lambda bbox, timestamp: f"Identify the item enclosed in {bbox} at the specific normalized time {timestamp}.",
    lambda bbox, timestamp: f"At the precise normalized time {timestamp}, what fills the area of bounding box {bbox}?",
    lambda bbox, timestamp: f"What resides within the confines of bounding box {bbox} at time {timestamp}, normalized?",
    lambda bbox, timestamp: f"Classify the content of bounding box {bbox} at the normalized timestamp {timestamp}.",
    lambda bbox, timestamp: f"Reveal the object that the bounding box {bbox} frames at the normalized time {timestamp}.",
    lambda bbox, timestamp: f"Uncover what lies in bounding box {bbox} at the point in time {timestamp}, normalized.",
    lambda bbox, timestamp: f"Discern the object held within bounding box {bbox} at normalized timestamp {timestamp}.",
    lambda bbox, timestamp: f"Which entity is depicted within {bbox} at the normalized juncture {timestamp}?",
    lambda bbox, timestamp: f"Ascertain the object positioned in bounding box {bbox} at normalized time {timestamp}.",
    lambda bbox, timestamp: f"At normalized timestamp {timestamp}, what entity is outlined by bounding box {bbox}?",
    lambda bbox, timestamp: f"Determine what is housed in {bbox} at the time slice normalized to {timestamp}.",
    lambda bbox, timestamp: f"Elucidate the object within the perimeters of {bbox} at the normalized time {timestamp}.",
    lambda bbox, timestamp: f"Examine the bounding box {bbox} at normalized time {timestamp}; what object is present?"
]


spatiotemporal_comparison_prompts = [
    lambda bbox1, timestamp1, bbox2, timestamp2: f"At normalized time {timestamp1}, what is the object in bounding box {bbox1}, and at time {timestamp2}, what is in {bbox2}? Are they the same type of object?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Identify the objects at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}. Are these objects identical in category?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Describe the entities captured within {bbox1} at {timestamp1} and within {bbox2} at {timestamp2}. Do they belong to the same class?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"What is observed in the bounding box {bbox1} at time {timestamp1}, and what is seen in {bbox2} at time {timestamp2}? Are they related by type?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Detail the contents of {bbox1} at normalized timestamp {timestamp1} and {bbox2} at {timestamp2}. Are they of the same object label?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Examine the object within {bbox1} at {timestamp1} and the object within {bbox2} at {timestamp2}. Is it the same type of object in both instances?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"At the normalized times {timestamp1} and {timestamp2}, what objects are found in {bbox1} and {bbox2}, respectively? Do they share a label?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"What fills bounding box {bbox1} at {timestamp1}, and what occupies {bbox2} at {timestamp2}? Are these the same kind of object?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Characterize the object at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}. Are they similar in terms of their classification?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Name the items located at {bbox1} during {timestamp1} and at {bbox2} during {timestamp2}. Do they represent the same object type?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Regarding the bounding boxes {bbox1} at time {timestamp1} and {bbox2} at time {timestamp2}, what objects do they contain? Are they of the same category?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Identify what's in bounding box {bbox1} at normalized time {timestamp1} and in {bbox2} at {timestamp2}. Are these objects identical in nature?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"From {timestamp1} in {bbox1} to {timestamp2} in {bbox2}, what objects are present? Do they fall under the same label?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Specify the objects within {bbox1} at {timestamp1} and within {bbox2} at {timestamp2}. Are they the same object type?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"What objects are visible in {bbox1} at the normalized timestamp {timestamp1} and in {bbox2} at {timestamp2}? Do they correspond to the same label?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"At the distinct times {timestamp1} and {timestamp2}, what is found in bounding boxes {bbox1} and {bbox2}? Are they the same kind of object?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Compare the contents of bounding box {bbox1} at {timestamp1} with those in {bbox2} at {timestamp2}. Are they of identical classification?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Review the entities in {bbox1} at normalized time {timestamp1} and in {bbox2} at {timestamp2}. Are they of the same object category?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Explain what's in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2}. Is it the same object or a different one?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Identify the objects within {bbox1} at {timestamp1} and {bbox2} at {timestamp2}. Are they of the same type? What are their labels?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"What are the names of the objects located in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2}? Are they the same object?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Describe the objects found in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2}. Are they identical? What are their classifications?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Can you name the objects in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2}? Do they belong to the same category?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"List the object types found at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}. Are they the same? Specify their labels.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Determine the object types within {bbox1} at {timestamp1} and {bbox2} at {timestamp2}. Do they match? Identify their names.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"What are the objects present at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}? Are they of the same kind? State their labels.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Identify the entities located in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2}. Are they similar? Mention their object classes.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Name the objects found between {bbox1} at {timestamp1} and {bbox2} at {timestamp2}. Are they identical? Provide their categories.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Characterize the objects at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}. Do they share the same label? Specify their types.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Between the objects within {bbox1} at {timestamp1} and within {bbox2} at {timestamp2}, are they the same? What are their respective labels?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Examine the objects at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}. Are they of the same family? Identify their names.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Regarding the objects in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2}, are they identical? Clarify their classifications.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Are the objects seen in {bbox1} at {timestamp1} and in {bbox2} at {timestamp2} the same? If not, what are their distinct labels?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"From {bbox1} at {timestamp1} to {bbox2} at {timestamp2}, are the observed objects the same? What are their object names?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Compare the objects in {bbox1} at {timestamp1} with those in {bbox2} at {timestamp2}. Are they identical? List their object classes.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Assess the similarity between objects at {timestamp1} in {bbox1} and {timestamp2} in {bbox2}. What are their labels?",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"In the intervals of {timestamp1} in {bbox1} and {timestamp2} in {bbox2}, are the objects the same? Enumerate their types.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Analyze the objects located at {timestamp1} in {bbox1} and at {timestamp2} in {bbox2}. Are they the same? Mention their categories.",
    lambda bbox1, timestamp1, bbox2, timestamp2: f"Identify whether the objects within {bbox1} at {timestamp1} and within {bbox2} at {timestamp2} are identical. What are their specific labels?"
]



aqa_prompts = ['Can you analyze this video and provide a rating based on the complexity and performance of the action seen in it?',
 'Can you assess the level of difficulty of the maneuvers in this video and determine their quality?',
 'Could you examine the performance shown in this video and evaluate it on a scale of 1-100 considering the difficulty of the maneuvers done?',
 'How would you rate the performance and the intricacy of the actions on display in this video?',
 'On a scale of 1 to 100, how would you score the execution of the action and the level of difficulty in this video?',
 'How well do you think the athlete in this video executed their action, considering the difficulty of the task? Please rate it.',
 'Please observe the maneuvers in the video carefully. How would you score the overall quality and the complexity of the action?',
 'How would you assess the execution and complication of the movements demonstrated in this video?',
 "What is your evaluation of the athlete's execution of the difficult moves in this video on a scale of 1 to 100?",
 'Please review the actions in this video and provide a score evaluating their difficulty and execution.',
 'Can you rate the complexity and execution of the displayed action in this footage from 1 to 100?',
 'How would you quantify the performance and challenge level of the action that is conducted in this video?',
 'Can you assess the standard and complication of the action in the video on a scale from 1 to 100?',
 'Please provide a score, from 1 to 100, on the level of difficulty and how well the action is executed in the video.',
 'What rating would you give to the action regarding its execution and difficulty in the presented footage, on a range from 1 to 100?',
 "Can you provide an assessment on the action's complexity and performance in this video, from 1 being the lowest to 100 being the highest?",
 'How would you rate the action featured in this video between 1 and 100, considering both the performance quality and the level of difficulty?',
 'On a scale of 1 to 100, how would you appraise the sophistication and performance level of the action you saw in the video clip?',
 "Can you please give your score for the action's execution and level of challenge featured in this video, using a grading scale of 1 to 100?",
 'On a scale of 1 to 100, how would you evaluate the intricacy and standard of the action in the video clip?',
 'Can you view this video and rate the performance and complexity of the demonstrated action using a scale from 1 to 100?',
 'Could you appraise the skill level and intricacy of the activity in this video, giving it a rating from 1 to 100?',
 'Please view this video and examine the execution and complexity, giving a score between 1 and 100.',
 'Could you give a numerical rating, from one to one hundred, based on the competency and challenge level of the action shown in the video?',
 'Would you be willing to look at this video and score it, considering the proficiency of execution and degree of difficulty?',
 'Can you evaluate how well the activity in this video is performed and how demanding it is on a scale of 1 to 100?',
 'On a scale of one to one hundred, how would you rate the technique and challenge of the presented action in this video?',
 'On the basis of the efficiency and complexity of the activity in this video, would you please give it a score from 1 to 100?',
 'Could you please assign a grade from 1 to 100 to the action in this video, bearing in mind the good execution and level of difficulty?',
 'What score, on a scale from one to a hundred, would you assign to this video after assessing the performance and challenge of the action?',
 'How would you score the execution and complexity of the action displayed in the video, on a scale from 1 to 100?',
 'Could you assess the technique and intensity of the action captured in this video, and rate it out of 100?',
 'What rating would you give to the overall performance and level of difficulty of the action presented in this video, on a 1-100 scale?',
 "Considering both the precision of the action and its degree of difficulty, how would you judge the video's content on a scale of 1 to 100?",
 'Watching this video, can you appraise the professional execution and challenge of the activity and rate it within a score range of 1 to 100?',
 'How would you assess on a scale of 1-100, the efficacy and difficulty level of the manoeuvre performed in this video?',
 "Could you rank the action's complexity and how well it was executed in this video from 1 to 100?",
 'Based on your observation of this video, how would you score the difficulty and proficiency of the action out of 100?',
 'By watching this video, can you rate how challenging the displayed action is and the quality of its execution from 1 to 100?',
 'Based on the footage, how would you evaluate the degree of difficulty and performance quality of the activity, on a scale of 1 to 100?',
 'Can you rate the performance and level of difficulty of the sequences in this video?',
 'On a scale of 1 to 100, how would you assess the sequence and complexity of the manoeuvres in this clip?',
 'How would you evaluate the moves and their intricacy in this video?',
 'What would be your estimation of action execution and its complication depicted in this video?',
 'Could you measure the execution of movements and their complexity level in this footage?',
 'How would you gauge the executing of actions and their difficulty level in this clip?',
 'What score out of 100 would you assign to the maneuvers performance and their complication in this footage?',
 "On a scale of 1 to 100, how do you rate the move's execution and complexity in this video?",
 'Could you give a grading on the performance of the sequences and their difficulty level in this video?',
 'Can you estimate the quality of actions and their difficulty featured in this video?'
              ]

before_prompts = [
    lambda a1: f"What happened immediately before {a1}?",
    lambda a1: f"Can you describe the event that took place right before {a1}?",
    lambda a1: f"Which action preceded {a1}?",
    lambda a1: f"What was the last thing that happened before {a1} started?",
    lambda a1: f"Identify the activity that occurred just before {a1}.",
    lambda a1: f"Before {a1}, what action was taking place?",
    lambda a1: f"What led up to {a1}?",
    lambda a1: f"Which action set the stage for {a1}?",
    lambda a1: f"What preceeded the action of {a1}?",
    lambda a1: f"Trace back to the moment right before {a1}. What do you find?",
    lambda a1: f"Consider the sequence of events leading to {a1}. What comes just before it?",
    lambda a1: f"Looking back, what was the action immediately before {a1}?",
    lambda a1: f"Recall the action that directly preceded {a1}. What was it?",
    lambda a1: f"Before the onset of {a1}, what was happening?",
    lambda a1: f"What activity can be observed right before {a1} takes place?",
    lambda a1: f"In the lead-up to {a1}, what action took place?",
    lambda a1: f"What was the precursor to {a1}?",
    lambda a1: f"Before we see {a1}, what action is evident?",
    lambda a1: f"What is the immediate predecessor of {a1} in the sequence of actions?",
    lambda a1: f"Can you pinpoint the action just before {a1} occurs?",
    lambda a1: f"What is the last action we see before {a1} starts?",
    lambda a1: f"Reflecting on the events, what comes right before {a1}?",
    lambda a1: f"Before the scene with {a1}, what action is captured?",
    lambda a1: f"What action sets the context for {a1}?",
    lambda a1: f"In the timeline of events, what directly leads into {a1}?",
    lambda a1: f"What do we observe happening immediately prior to {a1}?",
    lambda a1: f"What action unfolds right before the moment of {a1}?",
    lambda a1: f"Thinking about what leads to {a1}, what action do you recall before it?",
    lambda a1: f"Before the action {a1} begins, what can be observed?",
    lambda a1: f"What is the last thing that occurs right before {a1}?"
]

after_prompts = [
    lambda a1: f"What action followed right after {a1}?",
    lambda a1: f"Can you tell me what happened immediately after {a1}?",
    lambda a1: f"What was the next thing that occurred after {a1}?",
    lambda a1: f"After {a1}, what was the subsequent action?",
    lambda a1: f"What came directly after {a1} in the sequence of events?",
    lambda a1: f"Identify the activity that took place right after {a1}.",
    lambda a1: f"Following {a1}, what action takes place?",
    lambda a1: f"What ensued right after {a1}?",
    lambda a1: f"Can you describe the event following {a1}?",
    lambda a1: f"Which action immediately succeeds {a1}?",
    lambda a1: f"What transpires just after {a1}?",
    lambda a1: f"After the completion of {a1}, what happens next?",
    lambda a1: f"Post {a1}, what is the next action observed?",
    lambda a1: f"What follows in the wake of {a1}?",
    lambda a1: f"Once {a1} is over, what action is performed next?",
    lambda a1: f"Following the conclusion of {a1}, what occurs?",
    lambda a1: f"Directly after {a1}, what can be seen happening?",
    lambda a1: f"What is the immediate action after {a1}?",
    lambda a1: f"After {a1} concludes, what comes next?",
    lambda a1: f"Can you specify the next action after {a1}?",
    lambda a1: f"What do we see happening right after {a1}?",
    lambda a1: f"Following {a1}, what event unfolds?",
    lambda a1: f"What is the subsequent step after {a1}?",
    lambda a1: f"After the action of {a1}, what is the next move?",
    lambda a1: f"What activity is carried out immediately after {a1}?",
    lambda a1: f"Post {a1}, which action occurs?",
    lambda a1: f"After {a1}, what sequence of actions is observed?",
    lambda a1: f"What follows immediately after the event of {a1}?",
    lambda a1: f"Subsequent to {a1}, what action is taken?",
    lambda a1: f"Right after {a1}, what action is evident?"
]

subaction_sequence_prompts = [
    "Can you list the sequence of subactions that occur in this video?",
    "What are the consecutive subactions presented in the video?",
    "Describe the series of subactions that unfold in the video.",
    "Identify the order of subactions happening throughout the video.",
    "What subactions are performed, and in what sequence, in this video?",
    "Detail the subaction progression observed in the video.",
    "Enumerate the subactions that take place in the video, in order.",
    "What is the chain of subactions depicted in the video?",
    "Outline the sequence of subactions in the video.",
    "In what sequence do the subactions occur within the video?",
    "What sequence of subactions unfolds in this video?",
    "Describe the order and nature of subactions in the video.",
    "List all subactions in the video, in the order they appear.",
    "How do the subactions progress throughout the video?",
    "What is the flow of subactions within the video?",
    "Can you provide the timeline of subactions in the video?",
    "What are the key subactions and their sequence in the video?",
    "Detail the subactions from start to finish in the video.",
    "What sequence of events is divided into subactions in the video?",
    "How do the subactions unfold sequentially in the video?",
    "Trace the sequence of subactions in the video.",
    "Describe the step-by-step subactions in the video.",
    "Can you map out the subactions in order as they occur in the video?",
    "What are the distinct subactions and their sequence in this video?",
    "Break down the video into its sequence of subactions.",
    "Provide a chronological list of subactions in the video.",
    "How are the subactions organized in the video's timeline?",
    "What is the structured sequence of subactions in the video?",
    "Enumerate the subactions as they are sequentially executed in the video.",
    "What is the ordered list of subactions that make up the video?"
]


fill_in_prompts = [
    lambda sentence: f"Complete the sentence by filling in the blank: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What fits in the blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Fill in the missing word: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Guess the missing item: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Identify what's missing: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Complete the thought: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What's in the blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Finish the phrase: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Add the missing piece: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Supply the missing word: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Determine the missing element: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What would you insert here? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Fill in the gap: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Complete the missing part: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Can you fill in the blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What belongs in the blank space? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"How would you complete this? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What fits best in this blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Insert the missing item: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What word is missing? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Fill in the blank space: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Choose the right word for the blank: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What completes the sentence? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Fill in with the appropriate word: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Identify the missing word here: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What word fills the gap? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Guess the word that fits: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What should fill this blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Complete the sentence by adding a word: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What's the best word to fill in? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Choose a word to complete the phrase: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What would you use to fill this gap? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Find the missing word: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What word completes this sentence? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"How would you fill this blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Identify the word that fits here: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What word would you put in the blank? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Fill in the blank with a suitable word: '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"What's missing in this sentence? '{sentence.replace('[something]', '___')}'.",
    lambda sentence: f"Complete this by filling in the blank: '{sentence.replace('[something]', '___')}'."
]


guess_full_sentence_prompts = [
    lambda placeholders: f"What action involves {' and '.join(placeholders)}?",
    lambda placeholders: f"Describe an action that could be performed with {' and '.join(placeholders)}.",
    lambda placeholders: f"How would you use {' and '.join(placeholders)} in a single activity?",
    lambda placeholders: f"Create a sentence that includes {' and '.join(placeholders)} in the context of an action.",
    lambda placeholders: f"What's a common activity involving {' and '.join(placeholders)}?",
    lambda placeholders: f"Using {' and '.join(placeholders)}, what action could someone be doing?",
    lambda placeholders: f"Imagine a scenario with {' and '.join(placeholders)}. What's happening?",
    lambda placeholders: f"Combine {' and '.join(placeholders)} into a description of a task.",
    lambda placeholders: f"What could someone be doing with {' and '.join(placeholders)} in one sentence?",
    lambda placeholders: f"Craft a sentence that captures an action or event involving {' and '.join(placeholders)}.",
    lambda placeholders: f"Link {' and '.join(placeholders)} in a single descriptive action.",
    lambda placeholders: f"How can {' and '.join(placeholders)} be part of one coherent activity?",
    lambda placeholders: f"Formulate a sentence where {' and '.join(placeholders)} play a key role.",
    lambda placeholders: f"What unique action might involve {' and '.join(placeholders)}?",
    lambda placeholders: f"How would you narrate an action including {' and '.join(placeholders)}?",
    lambda placeholders: f"Propose an activity that necessitates the use of {' and '.join(placeholders)}.",
    lambda placeholders: f"Integrate {' and '.join(placeholders)} into a single action statement.",
    lambda placeholders: f"What's a creative way to use {' and '.join(placeholders)} together?",
    lambda placeholders: f"Devise a sentence that unites {' and '.join(placeholders)} in action.",
    lambda placeholders: f"Envision an action where {' and '.join(placeholders)} are central.",
    lambda placeholders: f"Summarize an action with {' and '.join(placeholders)} in one sentence.",
    lambda placeholders: f"Construct an activity description incorporating {' and '.join(placeholders)}.",
    lambda placeholders: f"How might {' and '.join(placeholders)} be related in an action?",
    lambda placeholders: f"Draft a scenario that includes {' and '.join(placeholders)} as key elements.",
    lambda placeholders: f"Elaborate on an action involving {' and '.join(placeholders)}.",
    lambda placeholders: f"What could be happening with {' and '.join(placeholders)}?",
    lambda placeholders: f"Describe an interaction involving {' and '.join(placeholders)}.",
    lambda placeholders: f"How are {' and '.join(placeholders)} connected in a single action?",
    lambda placeholders: f"What's an imaginative use of {' and '.join(placeholders)}?",
    lambda placeholders: f"Synthesize {' and '.join(placeholders)} into a cohesive action description."
]


relationship_prompts = [
    lambda obj1, obj2, time: f"Describe the interaction between {obj1} and {obj2} around time {round(time, 3)}.",
    lambda obj1, obj2, time: f"How do {obj1} and {obj2} engage with each other as the event progresses to {round(time, 3)}?",
    lambda obj1, obj2, time: f"What's the dynamic between {obj1} and {obj2} at the relative time of {round(time, 4)}?",
    lambda obj1, obj2, time: f"By the time {round(time*100, 1)}% of the sequence has passed, what are {obj1} and {obj2} doing?",
    lambda obj1, obj2, time: f"Given the timestamp at {round(time, 3)}, how are {obj1} and {obj2} interacting?",
    lambda obj1, obj2, time: f"What is happening between {obj1} and {obj2} when the timeline reaches {round(time, 4)}?",
    lambda obj1, obj2, time: f"At this point, around {round(time*100, 0)}% through, what's the situation with {obj1} and {obj2}?",
    lambda obj1, obj2, time: f"At {round(time, 3)} normalized time, how does {obj1} and {obj2} relate?",
    lambda obj1, obj2, time: f"What interaction occurs between {obj1} and {obj2} when the moment is around {round(time, 3)}?",
    lambda obj1, obj2, time: f"Delving into the interaction at approximately {round(time, 3)}, what stands out between {obj1} and {obj2}?",
    lambda obj1, obj2, time: f"As we approach a normalized time of {round(time, 4)}, what changes between {obj1} and {obj2}?",
    lambda obj1, obj2, time: f"With the event {round(time*100, 2)}% complete, how are {obj1} and {obj2} positioned?",
    lambda obj1, obj2, time: f"Observing the relationship at time {round(time, 3)}, what nuances are evident between {obj1} and {obj2}?",
]


loc_predict_prompts = [
    lambda obj, t1, bbox1, t2: f"Where is {obj}, initially spotted at {bbox1} around {t1}, found at time {t2}?",
    lambda obj, t1, bbox1, t2: f"From its position at {bbox1} at time {t1}, where does {obj} move to by {t2}?",
    lambda obj, t1, bbox1, t2: f"Given {obj}'s location at {bbox1} at {t1}, predict its location at {t2}.",
    lambda obj, t1, bbox1, t2: f"Trace the movement of {obj} from {bbox1} at {t1} to its position at {t2}.",
    lambda obj, t1, bbox1, t2: f"How does the location of {obj} change from {t1} ({bbox1}) to time {t2}?",
    lambda obj, t1, bbox1, t2: f"Identify {obj}'s new location at time {t2}, starting from {bbox1} at {t1}.",
    lambda obj, t1, bbox1, t2: f"After being at {bbox1} at {t1}, where is {obj} located at the subsequent {t2}?",
    lambda obj, t1, bbox1, t2: f"What is the new position of {obj} at time {t2} if it was at {bbox1} at {t1}?",
    lambda obj, t1, bbox1, t2: f"Considering {obj}'s starting point at {bbox1} during {t1}, determine its endpoint at {t2}.",
    lambda obj, t1, bbox1, t2: f"From the initial point {bbox1} at {t1}, where does {obj} end up at time {t2}?",
    lambda obj, t1, bbox1, t2: f"Where can {obj} be found at time {t2} if it started at {bbox1} around {t1}?",
    lambda obj, t1, bbox1, t2: f"Forecast the next position of {obj} at {t2}, knowing it was at {bbox1} at {t1}.",
    lambda obj, t1, bbox1, t2: f"Assuming {obj} was located at {bbox1} at time {t1}, where is it positioned by {t2}?",
    lambda obj, t1, bbox1, t2: f"From {bbox1} at {t1}, to what location does {obj} relocate by the time {t2} arrives?",
    lambda obj, t1, bbox1, t2: f"Map the progression of {obj} from {t1} at {bbox1} to its new locale at {t2}.",
    lambda obj, t1, bbox1, t2: f"Pinpoint the location of {obj} at {t2}, starting from {bbox1} at {t1}.",
    lambda obj, t1, bbox1, t2: f"If {obj} was at {bbox1} at {t1}, where should it be spotted at {t2}?",
    lambda obj, t1, bbox1, t2: f"What's the next stop for {obj} after {bbox1} at {t1} as we reach {t2}?",
    lambda obj, t1, bbox1, t2: f"Estimate {obj}'s whereabouts at {t2} after starting at {bbox1} at {t1}.",
    lambda obj, t1, bbox1, t2: f"How far does {obj} travel from {bbox1} at {t1} to its next point at {t2}?",
    lambda obj, t1, bbox1, t2: f"Can you deduce {obj}'s position at {t2} from its starting point at {bbox1} around {t1}?",
    lambda obj, t1, bbox1, t2: f"Where does {obj}, initially at {bbox1} during {t1}, find itself by the time {t2}?",
    lambda obj, t1, bbox1, t2: f"Determine the displacement of {obj} from {t1} at {bbox1} to the moment {t2}.",
    lambda obj, t1, bbox1, t2: f"From its sighting at {bbox1} at {t1}, where has {obj} ventured by {t2}?",
    lambda obj, t1, bbox1, t2: f"Given {obj}'s initial spotting at {bbox1} at {t1}, locate it at time {t2}.",
    lambda obj, t1, bbox1, t2: f"What's {obj}'s new setting at {t2} following its last known location at {bbox1} at {t1}?",
    lambda obj, t1, bbox1, t2: f"Chart {obj}'s journey from its position at {bbox1} during {t1} to {t2}.",
    lambda obj, t1, bbox1, t2: f"Project the movement of {obj} from {bbox1} at {t1} to its next checkpoint at {t2}.",
    lambda obj, t1, bbox1, t2: f"Uncover where {obj} lands at {t2}, having departed from {bbox1} at {t1}.",
    lambda obj, t1, bbox1, t2: f"From {bbox1} at {t1}, where is {obj} expected to be found as we approach {t2}?",
]



positive_feedback_prompts = [
    lambda task, t: f"Highlight the commendable aspects of performing '{task}' at timestamp {t}.",
    lambda task, t: f"What positive feedback can be given for '{task}' observed at {t}?",
    lambda task, t: f"Share some good comments about the execution of '{task}' at {t}.",
    lambda task, t: f"Identify the strengths in the approach to '{task}' at the moment {t}.",
    lambda task, t: f"Provide positive remarks for the actions taken in '{task}' at {t}.",
    lambda task, t: f"What aspects of '{task}' at {t} would you commend?",
    lambda task, t: f"Give encouraging feedback for the task '{task}' at time {t}.",
    lambda task, t: f"What are the standout features in the performance of '{task}' at {t}?",
    lambda task, t: f"Offer some words of praise for the technique shown in '{task}' at {t}.",
    lambda task, t: f"How would you positively review the performance of '{task}' at {t}?",
    lambda task, t: f"Provide constructive comments on the methodology of '{task}' around {t}.",
    lambda task, t: f"What successful strategies are used in '{task}' at timestamp {t}?",
    lambda task, t: f"Express appreciation for the skill demonstrated in '{task}' at {t}.",
    lambda task, t: f"What did you find impressive about the approach to '{task}' at {t}?",
    lambda task, t: f"Give kudos for the effective execution of '{task}' at {t}.",
    lambda task, t: f"How would you highlight the effectiveness of the actions in '{task}' at {t}?",
    lambda task, t: f"What positive observations can be made about '{task}' at {t}?",
    lambda task, t: f"Comment on the proficiency shown in '{task}' at the moment {t}.",
    lambda task, t: f"Recognize the achievements within the task of '{task}' at {t}.",
    lambda task, t: f"Admire the approach taken in '{task}' at time {t}.",
    lambda task, t: f"Applaud the skillful execution observed in '{task}' at {t}.",
    lambda task, t: f"Give a positive critique of the action seen in '{task}' at {t}.",
    lambda task, t: f"What exemplary practices are evident in '{task}' at {t}?",
    lambda task, t: f"How is excellence achieved in the task of '{task}' at {t}?",
    lambda task, t: f"Appreciate the adept handling of '{task}' at timestamp {t}.",
    lambda task, t: f"What merits attention in the performance of '{task}' at {t}?",
    lambda task, t: f"Commend the strategies employed in '{task}' at {t}.",
    lambda task, t: f"How would you describe the successful elements of '{task}' at {t}?",
    lambda task, t: f"Show approval for the techniques used in '{task}' at {t}.",
    lambda task, t: f"What positive aspects can be highlighted about '{task}' at {t}?",
    lambda task, t: f"Recognize the effective techniques in '{task}' at time {t}.",
    lambda task, t: f"Discuss the high points of the execution in '{task}' at {t}.",
    lambda task, t: f"Point out the praiseworthy aspects of '{task}' at {t}.",
    lambda task, t: f"Compliment the execution of '{task}' at the specific time {t}.",
    lambda task, t: f"What laudable actions are noted in '{task}' at {t}?",
    lambda task, t: f"Give acclaims for the approach to '{task}' at timestamp {t}.",
    lambda task, t: f"How is the performance of '{task}' at {t} exemplary?",
    lambda task, t: f"What commendations fit the execution of '{task}' at {t}?",
    lambda task, t: f"Salute the proficiency in '{task}' observed at {t}.",
    lambda task, t: f"Express positive sentiments about the completion of '{task}' at {t}.",
    lambda task, t: f"What are your observations about '{task}' at timestamp {t}?",
    lambda task, t: f"Can you provide feedback on the approach taken in '{task}' around {t}?",
    lambda task, t: f"What comments do you have on the execution of '{task}' at {t}?",
    lambda task, t: f"How would you describe the actions taken in '{task}' at the moment {t}?",
    lambda task, t: f"What stood out to you in the performance of '{task}' at {t}?",
    lambda task, t: f"Share your thoughts on the techniques used in '{task}' at {t}.",
    lambda task, t: f"How would you critique the methodology of '{task}' around {t}?",
    lambda task, t: f"What insights can you provide about '{task}' at timestamp {t}?",
    lambda task, t: f"Provide an overview of the actions seen in '{task}' at {t}.",
    lambda task, t: f"What did you notice about the task of '{task}' at {t}?",
    lambda task, t: f"How effective do you find the strategies in '{task}' at {t}?",
    lambda task, t: f"What could be improved in the execution of '{task}' at {t}?",
    lambda task, t: f"Discuss the techniques observed in '{task}' at time {t}.",
    lambda task, t: f"What are the key takeaways from the task '{task}' at {t}?",
    lambda task, t: f"Reflect on the process and outcome of '{task}' at {t}.",
    lambda task, t: f"How do the actions at {t} contribute to the overall goal of '{task}'?",
    lambda task, t: f"What challenges are apparent in '{task}' at the moment {t}?",
    lambda task, t: f"How does the approach to '{task}' at {t} align with best practices?",
    lambda task, t: f"What strengths and weaknesses are evident in '{task}' at {t}?",
    lambda task, t: f"Analyze the sequence of actions for '{task}' at {t}.",
    lambda task, t: f"What recommendations would you make for '{task}' based on the segment at {t}?",
    lambda task, t: f"How do the details in '{task}' at {t} affect the overall execution?",
    lambda task, t: f"Comment on the pacing and timing of '{task}' at {t}.",
    lambda task, t: f"What aspects of '{task}' at {t} could be optimized?",
    lambda task, t: f"How does the segment at {t} fit into the larger context of '{task}'?",
    lambda task, t: f"Assess the precision and accuracy observed in '{task}' at {t}.",
    lambda task, t: f"What is your overall impression of '{task}' at the specific time {t}?",
    lambda task, t: f"How do the decisions made at {t} impact the success of '{task}'?",
    lambda task, t: f"Offer a comprehensive review of '{task}' at the timestamp {t}.",
    lambda task, t: f"What factors in '{task}' at {t} influence its efficiency and effectiveness?",
    lambda task, t: f"How could the approach to '{task}' at {t} be refined or adjusted?",
    lambda task, t: f"Describe the level of skill and technique displayed in '{task}' at {t}.",
    lambda task, t: f"What implications do the actions at {t} have for the outcome of '{task}'?",
    lambda task, t: f"How do the actions in '{task}' at {t} demonstrate expertise or lack thereof?",
    lambda task, t: f"What lessons can be learned from the execution of '{task}' at {t}?",
    lambda task, t: f"How does the segment of '{task}' at {t} exemplify key principles or concepts?",
    lambda task, t: f"What impact do the actions at {t} have on the progress of '{task}'?",
    lambda task, t: f"How would you summarize the segment of '{task}' at {t} in terms of its execution and approach?",
    lambda task, t: f"What do the actions within '{task}' at {t} reveal about the overall strategy?",
    lambda task, t: f"How could the techniques observed in '{task}' at {t} be applied or adapted elsewhere?"
]



general_tips_prompts = [
    lambda task, t: f"What are your observations about '{task}' at timestamp {t}?",
    lambda task, t: f"Can you provide feedback on the approach taken in '{task}' around {t}?",
    lambda task, t: f"What comments do you have on the execution of '{task}' at {t}?",
    lambda task, t: f"How would you describe the actions taken in '{task}' at the moment {t}?",
    lambda task, t: f"What stood out to you in the performance of '{task}' at {t}?",
    lambda task, t: f"Share your thoughts on the techniques used in '{task}' at {t}.",
    lambda task, t: f"How would you critique the methodology of '{task}' around {t}?",
    lambda task, t: f"What insights can you provide about '{task}' at timestamp {t}?",
    lambda task, t: f"Provide an overview of the actions seen in '{task}' at {t}.",
    lambda task, t: f"What did you notice about the task of '{task}' at {t}?",
    lambda task, t: f"How effective do you find the strategies in '{task}' at {t}?",
    lambda task, t: f"What could be improved in the execution of '{task}' at {t}?",
    lambda task, t: f"Discuss the techniques observed in '{task}' at time {t}.",
    lambda task, t: f"What are the key takeaways from the task '{task}' at {t}?",
    lambda task, t: f"Reflect on the process and outcome of '{task}' at {t}.",
    lambda task, t: f"How do the actions at {t} contribute to the overall goal of '{task}'?",
    lambda task, t: f"What challenges are apparent in '{task}' at the moment {t}?",
    lambda task, t: f"How does the approach to '{task}' at {t} align with best practices?",
    lambda task, t: f"What strengths and weaknesses are evident in '{task}' at {t}?",
    lambda task, t: f"Analyze the sequence of actions for '{task}' at {t}.",
    lambda task, t: f"What recommendations would you make for '{task}' based on the segment at {t}?",
    lambda task, t: f"How do the details in '{task}' at {t} affect the overall execution?",
    lambda task, t: f"Comment on the pacing and timing of '{task}' at {t}.",
    lambda task, t: f"What aspects of '{task}' at {t} could be optimized?",
    lambda task, t: f"How does the segment at {t} fit into the larger context of '{task}'?",
    lambda task, t: f"Assess the precision and accuracy observed in '{task}' at {t}.",
    lambda task, t: f"What is your overall impression of '{task}' at the specific time {t}?",
    lambda task, t: f"How do the decisions made at {t} impact the success of '{task}'?",
    lambda task, t: f"Offer a comprehensive review of '{task}' at the timestamp {t}.",
    lambda task, t: f"What factors in '{task}' at {t} influence its efficiency and effectiveness?",
    lambda task, t: f"How could the approach to '{task}' at {t} be refined or adjusted?",
    lambda task, t: f"Describe the level of skill and technique displayed in '{task}' at {t}.",
    lambda task, t: f"What implications do the actions at {t} have for the outcome of '{task}'?",
    lambda task, t: f"How do the actions in '{task}' at {t} demonstrate expertise or lack thereof?",
    lambda task, t: f"What lessons can be learned from the execution of '{task}' at {t}?",
    lambda task, t: f"How does the segment of '{task}' at {t} exemplify key principles or concepts?",
    lambda task, t: f"What impact do the actions at {t} have on the progress of '{task}'?",
    lambda task, t: f"How would you summarize the segment of '{task}' at {t} in terms of its execution and approach?",
    lambda task, t: f"What do the actions within '{task}' at {t} reveal about the overall strategy?",
    lambda task, t: f"How could the techniques observed in '{task}' at {t} be applied or adapted elsewhere?"
]




prompts_for_demonstrator = [
    lambda ann: f"At time {ann['video_time']}, when {ann['text']}, how proficient does the person seem?",
    lambda ann: f"How experienced does the person appear while {ann['text']}?",
    lambda ann: f"Given the action '{ann['text']}', what would you say about the performer's skill level?",
    lambda ann: f"Judging by the moment when {ann['text']}, how would you rate the proficiency?",
    lambda ann: f"Considering the task where {ann['text']}, how skilled is the individual?",
    lambda ann: f"When {ann['text']}, what level of expertise does the person demonstrate?",
    lambda ann: f"In the scenario where {ann['text']}, what proficiency level can be inferred?",
    lambda ann: f"Based on the action '{ann['text']}', how advanced is the performer?",
    lambda ann: f"Observing the task '{ann['text']}', how would you gauge the person's proficiency?",
    lambda ann: f"With the task where {ann['text']}, what degree of skill is exhibited?",
    lambda ann: f"From the action '{ann['text']}', how proficient does the performer come across?",
    lambda ann: f"Considering the activity '{ann['text']}', how adept does the individual seem?",
    lambda ann: f"Given the performance where {ann['text']}, what's the perceived skill level?",
    lambda ann: f"When observing the action {ann['text']}, how proficient does the participant appear?",
    lambda ann: f"How would you describe the level of mastery in the task of {ann['text']}?",
    lambda ann: f"Assessing the task {ann['text']}, what can be said about the performer's expertise?",
    lambda ann: f"From the performance of {ann['text']}, how experienced does the person seem?",
    lambda ann: f"In the instance of {ann['text']}, how proficient is the action carried out?",
    lambda ann: f"Reviewing the moment {ann['text']}, how skillful is the performer?",
    lambda ann: f"Based on {ann['text']}, how capable does the individual appear in the task?",
    lambda ann: f"Considering the action depicted in {ann['text']}, what proficiency level does it suggest?",
    lambda ann: f"Evaluating the task involving {ann['text']}, how would you rate the performer's skill?",
    lambda ann: f"When the person is {ann['text']}, how polished is their technique?",
    lambda ann: f"Reflecting on {ann['text']}, what level of proficiency is demonstrated?",
    lambda ann: f"With respect to the action {ann['text']}, how would you assess the person's skillfulness?",
    lambda ann: f"Analyzing the task where {ann['text']}, what level of mastery is observed?",
    lambda ann: f"During the task of {ann['text']}, how experienced does the performer seem?",
    lambda ann: f"Given the specific action {ann['text']}, what level of proficiency is evident?",
    lambda ann: f"Regarding the activity '{ann['text']}', how skilled does the person come across?",
    lambda ann: f"How proficient appears the individual while {ann['text']}?",
    lambda ann: f"In the context of {ann['text']}, how advanced does the person's skill appear?",
    lambda ann: f"From the detailed action '{ann['text']}', how adept does the performer seem?",
    lambda ann: f"Looking at the action {ann['text']}, how would you describe the proficiency level?",
    lambda ann: f"Considering the movement {ann['text']}, how expert does the performer appear?",
    lambda ann: f"Given the sequence where {ann['text']}, what can be inferred about the person's skill level?",
    lambda ann: f"Judging from the activity {ann['text']}, how proficient is the participant?",
    lambda ann: f"In the event of {ann['text']}, how polished does the performer's skill seem?",
    lambda ann: f"Assessing the proficiency from the action {ann['text']}, how skilled is the individual?",
    lambda ann: f"Observing the technique in {ann['text']}, how experienced does the performer seem?",
    lambda ann: f"Regarding the skillful execution of {ann['text']}, how proficient is the person?",
    lambda ann: f"At the {ann['video_time']} mark, while {ann['text']}, how would you evaluate the person's skill in '{ann['task_name']}'?",
    lambda ann: f"Considering the action at {ann['video_time']} seconds, '{ann['text']}', what does this say about the performer's proficiency?",
    lambda ann: f"How skilled does the person appear at {ann['video_time']} seconds during the task '{ann['task_name']}'?",
    lambda ann: f"Given the action '{ann['text']}' at {ann['video_time']} seconds, how proficient is the person in the context of '{ann['task_name']}'?",
    lambda ann: f"At {ann['video_time']} seconds, when the person is {ann['text']}, what level of mastery do they demonstrate in '{ann['task_name']}'?",
    lambda ann: f"Reflecting on the moment at {ann['video_time']} seconds, '{ann['text']}', how adept is the performer?",
    lambda ann: f"Reviewing the proficiency during '{ann['task_name']}' at {ann['video_time']} seconds, especially when {ann['text']}, what's your assessment?",
    lambda ann: f"At the specific time of {ann['video_time']} seconds in '{ann['task_name']}', given the action '{ann['text']}', how polished is the technique?",
    lambda ann: f"Analyzing the segment at {ann['video_time']} seconds where {ann['text']}, how would you describe the performer's proficiency in '{ann['task_name']}'?",
    lambda ann: f"During '{ann['task_name']}' at the timestamp of {ann['video_time']} seconds, as {ann['text']}, how skilled does the individual seem?"
]

